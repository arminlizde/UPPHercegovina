@model UPPHercegovina.WebApplication.Models.Field

@{
    ViewBag.Title = "Izmjeni / Zemljište";
}

<h2>Izmjeni podatke o zemljištu</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Zemljište</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.GeoLong, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.GeoLong, new { htmlAttributes = new { @class = "form-control", Value = ViewBag.lng, placeholder = "Geografska dužina", id = "lat" } })
                        @Html.ValidationMessageFor(model => model.GeoLong, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.GeoLat, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.GeoLat, new { htmlAttributes = new { @class = "form-control", Value = ViewBag.lat, placeholder = "Geografska širina", id = "lng" } })
                        @Html.ValidationMessageFor(model => model.GeoLat, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Spasi promjene" class="btn btn-default" />
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="row">

                    <div class="form-group">
                        <div id="map" class="mapa" style="border:thin; border-color:#473581; height:298px;"></div>

                        <script>


                                function initMap() {


                                    var myLatLng = {lat: @ViewBag.lat, lng: @ViewBag.lng};

                                    var map = new google.maps.Map(document.getElementById('map'), {
                                        zoom: 8,
                                        center: myLatLng
                                    });

                                    var marker = new google.maps.Marker({
                                        position: myLatLng,
                                        map: map,
                                        title: 'Povuci i postavi lokaciju!',
                                        draggable:true
                                    });


                                    google.maps.event.addListener(map, 'click', function (event) {

                                        displayCoordinates(event.latLng);

                                    });
                                    google.maps.event.addListener(marker, 'dragend', function () {
                                        map.setCenter(this.getPosition()); // Set map center to marker position
                                        updatePosition(this.getPosition().lat(), this.getPosition().lng()); // update position display

                                        document.getElementById('lat').value = this.getPosition().lat();


                                        $("#lat").val(this.getPosition().lng());
                                        $("#lng").val(this.getPosition().lat());


                                    });

                                    google.maps.event.addListener(map, 'dragend', function () {
                                        myMarker.setPosition(this.getCenter()); // set marker position to map center
                                        updatePosition(this.getCenter().lat(), this.getCenter().lng()); // update position display



                                    });

                                    function updatePosition(lat, lng) {5
                                        console.log("Latitude: " + lat + "  Longitude: " + lng);
                                        document.getElementById('lng').value = lng;
                                    }
                                    //document.getElementById('lat').value = lat;
                                    //document.getElementById('lng').value = lng;






                                    function displayCoordinates(pnt) {

                                        var lat = pnt.lat();
                                        lat = lat.toFixed(4);
                                        var lng = pnt.lng();
                                        lng = lng.toFixed(4);




                                    }
                                }






                        </script>
                        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCZ0Bah24dB4oqaIN9peo9nnFAnboZjzmY&callback=initMap"
                                async defer></script>

                    </div>
                </div>
            </div>

        </div>


    </div>
                    }

<div>
    @Html.ActionLink("Nazad na listu", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
